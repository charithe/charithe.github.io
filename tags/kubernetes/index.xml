<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Ultracrepidarian</title>
    <link>/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Ultracrepidarian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 17 May 2016 21:10:23 +0100</lastBuildDate><atom:link href="/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Akka Cluster On Kubernetes</title>
      <link>/posts/kubernetes-akka-cluster/</link>
      <pubDate>Tue, 17 May 2016 21:10:23 +0100</pubDate>
      
      <guid>/posts/kubernetes-akka-cluster/</guid>
      <description>One of the challenges of running an Akka cluster application is the bootstrapping step required to discover other nodes in the cluster. This post illustrates how to make use of Kubernetes headless services to deploy an Akka cluster that automatically discovers its peers.
Normally, Kubernetes services resolve to a single IP address belonging to one of the child containers that match the selection criteria. A headless service, on the other hand, return a list of all the IP addresses that are under its watch.</description>
    </item>
    
  </channel>
</rss>
